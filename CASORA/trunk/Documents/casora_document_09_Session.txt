    第9章 Session

■9.1. 概要

    PHP で書かれたウェブアプリケーションでは、セッション  を使用して
    サーバ側 (状態を保持するデータ) とクライアント側 (特定のユーザエージェント。たとえばウェブブラウザ)
    の論理的な一対一の関係を表します。
    Session はセッションデータの管理と保持を行い、同一クライアントからの複数ページにわたるリクエストを扱います。

    このコンポーネントのドキュメントにおいて「セッションデータ」という用語は、
    $_SESSION に保存されたり、 Session で管理されるデータをさすものとします。
    これは、文字列をキーとした連想配列形式で実装されています。 (通常の PHP の配列と同じです)。 

    Session は、session_set_save_handler() を使用し、PHPのコアに含まれているデフォルトのセッション関数を上書きします。


■9.2. セッションの保存先

    現在対応しているのは、以下の通りです。

        file        …  ローカルサーバでのファイルによる保存
        cookie      …  クッキーによる保存
        db          …  データベースによる保存
        memcached   …  memcached *1 による保存

    *1 memcached については公式サイト http://www.danga.com/memcached/ を参照してください。

■9.3. 設定可能なパラメータ

    Session の設定用のメンバ変数はstaticなので、最初にパラメータを設定すれば、
    どのスコープでも、同じ設定でのインスタンスを取得することができます。

    setParamater() メソッドを使用し連想配列で引数を指定します。

    設定変更のできる項目は以下の通りです。

        [use_trans_sid]
            透過的なセッション IDの付加をするかどうか。  

            1(有効) 0(無効)

            【デフォルト】
                1

        [name]
            セッション名。
            アルファベット文字のみで指定する必要があります。

            【デフォルト】
                PHPSESSID

        [gc_maxlifetime]
            データが 'ごみ' とみなされ、消去されるまでの秒数。
            ガベージコレクション (ごみの収集) は、 セッションの開始時に行われます。 

            【デフォルト】
                null

        [cache_expire]
            キャッシュされた セッションページの有効期間（分単位）

            【デフォルト】
                null

        [save_path]
            セッションデータ保存パス
            セッションの保存先に「file」を選択した場合の、ファイルが作成される場所のパスになります。 

            【デフォルト】
                null

■9.4. 基本的な使用法

    以下にデータベースをセッションの保存先として使用した場合の使用例を示します。

        require_once('FW/Session.class.php');

        Session::setParamater( array( 'use_trans_sid'  => 1,
                                      'name'           => 'PHPSESSID',
                                      'cache_expire'   => 120,
                                      'gc_maxlifetime' => 7200 ) );
                              
        $Session = Session::getInstance( 'db' );

        $Session->start($_COOKIE['PHPSESSID']);

        if ( !isset($_SESSION['id']) ) {
            $Session->destroy();
            throw new Exception('セッションが切れました。');
        }

        $Session->close();
