    第3章 Controller

■3.1. 概要

    Controller は Model-View-Controller (MVC) アプリケーションで用いられる 
    フロントコントローラパターン を実装したものです。
    その役割は、リクエスト環境を初期化してリクエストの配送先を決定し、
    見つかった配送先に処理を引き渡すことです。
    また、レスポンスの内容を取得してそれをコール元に返します。

■3.2. 依存関係

    現在、以下のクラスと定数に依存しています。

    【クラス】
        Router
        Viewer
        Logger

    【定数】
        MODELS_DIR
        VIEWS_DIR
        ROUTER_TYPE
        ERROR_TEMPLATE

    ※定数については「第2章 設定内容の詳細」を参照してください。

■3.3. 挙動について

    以下コントローラーが行う、大まかな流れになります。

        １．Routerクラスを呼び出して、配送先のパスやリクエストを取得します。

        ２．配送先のクラス（Modelsディレクトリ内のクラス。以後アクションクラスと呼ぶ）を読み込みます。
        読み込めない場合はビューを読み込んで終了。
        クラスもビューも読み込めない場合はエラー(Exception)を吐く。

        ３．アクションクラスのメンバ変数に、ブラウザから受け取ったリクエストを代入。
        このタイミングで、mysql_escape_string()・htmlspecialchars()をかまし、
        （完全ではないが）XSS、SQLインジェクションを防いでいる。

        ４．アクションクラスにvaridateメソッド *1 があれば実行する。

        ５．アクションクラスにactionメソッド *1 があれば実行し、表示するView *2 の名前を取得する。
        なければエラー（Exception）を吐く。

        ６．以上の流れの中でエラーが有った場合、catchで例外を捕まえて、
        ERROR_TEMPLATE 定数で指定されたView *2 の名前を取得する。

        ７．出力のバッファリングを有効にする

        ８．Viewerクラスを使い、レンダリングしたHTMLを出力する。

        ９．出力されたHTMLを変数に代入して、出力のバッファリングを終了する。

        10．アクションクラスにfilterメソッド *1 があれば実行する。

        11．HTMLを表示する。


            *1 各メソッドの機能については「第5章 アクションクラス」を参照してください。
            *2 Viewについては「第6章 Viewer」を参照してください。
