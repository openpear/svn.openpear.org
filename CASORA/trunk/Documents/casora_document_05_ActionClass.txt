    第5章 アクションクラス

■5.1 概要

    アクションクラスには、Webページを表示するための処理、アクション内容を記述したメソッドを定義します。

    MODELS_DIR 定数で定義したディレクトリに作成していきます。


■5.2. 定義条件とルール

    すべてはRouterに依存します。
    以下 Router_default クラスを使用した場合で説明します。

    【命名規約】

        ・指定されたアクション名の頭文字を大文字にして、拡張子を「.class.php」にする。

            例  指定されたアクション名が「form」の場合

                [MODELS_DIR]/Form.class.php

    【クラス名】

        ・パス、アクション名の頭文字を大文字にして繋げる。

            例1 アクション名が「form」の場合

                class Form {
                    :

            例2 アクション名が「form」の場合で、パスが「member」の場合

                class MemberForm {
                    :


    また、アクションクラス作成する場合、action()メソッドを必ず定義しなければいけません。
    コントローラーを実行したタイミングで、自動的に呼び出されます。
    定義しなかった場合、コントローラーが例外を吐きます。

    他にコントローラーから自動的に呼び出される、validate()・filter() メソッドがあります。

■5.3. メソッド

    コントローラはアクションクラスのメソッドチェックし、
    以下のメソッドが存在すれば、自動的に呼び出します。

    ・action()

        必須メソッド

        リクエストを引数として受けとらなければいけません（変数名は何でも良い）

    ・validate()

        任意メソッド

        action() メソッドが実行される前に実行されます。
        用途は主に、リクエストされた値のバリデーションです。

        リクエストを引数として受けとらなければいけません（変数名は何でも良い）
        ※参照渡しで受け取る

    ・filter()

        任意メソッド

        action() メソッドが実行される後に実行されます。
        用途は主に、レンダリングされた Viewテンプレートの書き換えです。

        Viewテンプレートをレンダリングした結果を引数として受けとらなければいけません（変数名は何でも良い）


■5.4. メンバ変数

    アクションクラスのメンバ変数に値を代入することによって、
    Viewテンプレートで使用することができます。


■5.5. サンプルコード

    <?php
    class Top
    {

        public function validate( &$requests )
        {
            if ( $requests['number'] == '' ) {
                $requests['number'] = 0;
            }

            return;
        }

        public function action( $requests ){

            $this->number = $requests['number'] / 100;

            return 'top';
        }

        public function filter( $buffer )
        {
            return str_replace( 'Bonjour', 'Hello', $buffer );
        }
    }

    【動作の流れ】

    １．validate() メソッドがコントローラより呼ばれ、リクエストのnumber変数が空だった場合、
    「0」を代入します。

    ２．action() メソッドがコントローラより呼ばれ、リクエストのnumber変数の値を100で割り、
    その結果をメンバ変数 number に代入します。
    Viewテンプレートには「top」を指定します。

    ３．Viewテンプレートをレンダリングした結果内容にある、'Bonjour'という文字列を
    'Hello'に置換した内容をコントローラに返す。

    ４．コントローラが３で返された内容を表示する。
