<?php
require_once 'PHPUnit/Framework.php';

require_once '../src/HTML/CSS/Selector2XPath.php';

/**
 * Test class for selectorToXPath.
 * Generated by PHPUnit on 2009-04-13 at 15:07:24.
 */
class selectorToXPathTest extends PHPUnit_Framework_TestCase
{
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @dataProvider toXPathData
     */
    public function testToXPath($selector, $expected) {
        $this->assertEquals($expected, HTML_CSS_Selector2XPath::toXPath($selector));
    }

    /**
     * @todo Implement testPregMatchDelete().
     */
    public function testPregMatchDelete() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    public function toXPathData()
    {
        return array(
            // 基本的なもの
            array('*', '//*'),
            array('E', '//E'),
            array('E F', '//E//F'),
            array('E > F', '//E/F'),
            array('E + F', '//E/following-sibling::*[1]/self::F'),
            array('E ~ F', '//E/following-sibling::F'),
            array('E:first-child', '//E[not(preceding-sibling::*)]'),
            array('E:last-child', '//E[not(following-sibling::*)]'),
            array('E:lang(c)', '//E[@xml:lang="c" or starts-with(@xml:lang, "c-")]'),
            array('E:nth-child(even)', '//E[count(preceding-sibling::*) mod 2 = 1]'), // position()だと絞り込んだ中での位置になってしまう
            array('E:nth-child(odd)', '//E[count(preceding-sibling::*) mod 2 = 0]'),
            array('E:nth-child(3)', '//E[count(preceding-sibling::*) = 3 - 1]'),
            array('E:nth-child( 3n + 1 )', '//E[(count(preceding-sibling::*) + 1) mod 3 = 1]'),
            array('E:nth-child( +3n - 2 )', '//E[(count(preceding-sibling::*) + 1) mod 3 = 1]'),
            array('E:nth-child( n )', '//E[(count(preceding-sibling::*) + 1) mod 1 = 0]'),
            array('E:nth-child(0n+1)', '//E[(count(preceding-sibling::*) + 1) = 1]'),
            array('E:nth-child(-n + 6)', '//E[(count(preceding-sibling::*) + 1) * 1 <= 6]'),
            array('E[foo]', '//E[@foo]'),
            array('E[foo="warning"]', '//E[@foo="warning"]'),
            array('E[foo~="warning"]', '//E[contains(concat( " ", @foo, " "), " warning ")]'),// 注意：foo="warnings"な要素は含まれてはいけない
            array('E[lang|="en"]', '//E[@lang="en" or starts-with(@lang, concat( "en", "-"))]'),
            array('DIV.warning', '//DIV[contains(concat( " ", @class, " "), " warning ")]'),
            array('E#myid', '//E[@id="myid"]'),

            // "*" の省略
            // @see CSS 2.0仕様書 5章3節 第2段落
            array('.warning', '//*[contains(concat( " ", @class, " "), " warning ")]'),
            array('#myid', '//*[@id="myid"]'),
            array(':first-child', '//*[not(preceding-sibling::*)]'),
            array(':last-child', '//*[not(following-sibling::*)]'),
            array(':lang(c)', '//*[@xml:lang="c" or starts-with(@xml:lang, "c-")]'),
            array('[foo]', '//*[@foo]'),
            array('[foo="warning"]', '//*[@foo="warning"]'),
            array('[foo~="warning"]', '//*[contains(concat( " ", @foo, " "), " warning ")]'),
            array('[lang|="en"]', '//*[@lang="en" or starts-with(@lang, concat( "en", "-"))]'),

            // 組み合わせ
            // TODO: 直行表とかオールペア法とかで生成すべき

            // 特に危険そうな組み合わせ
            array('.warning.message', '//*[contains(concat( " ", @class, " "), " warning ")][contains(concat( " ", @class, " "), " message ")]'),
            array('E *', '//E//*'),
            array('E :first-child', '//E//*[not(preceding-sibling::*)]'),
            array('E > :last-child', '//E/*[not(following-sibling::*)]'),
            array('E > .warning', '//E/*[contains(concat( " ", @class, " "), " warning ")]'),
            array('[foo] + .warning', '//*[@foo]/following-sibling::*[1]/self::*[contains(concat( " ", @class, " "), " warning ")]'),
            array(':last-child:first-child[foo].warning', '//*[not(following-sibling::*)][not(preceding-sibling::*)][@foo][contains(concat( " ", @class, " "), " warning ")]'),
        );
    }
}
?>
